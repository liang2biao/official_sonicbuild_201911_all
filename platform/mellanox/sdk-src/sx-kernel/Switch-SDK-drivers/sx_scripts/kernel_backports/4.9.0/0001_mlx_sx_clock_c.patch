diff --git a/drivers/net/mlx_sx/sx_clock.c b/drivers/net/mlx_sx/sx_clock.c
index bcbb910..f9e9eb6 100644
--- a/drivers/net/mlx_sx/sx_clock.c
+++ b/drivers/net/mlx_sx/sx_clock.c
@@ -43,8 +43,7 @@
 #include "sx_clock.h"
 #include "cq.h"
 #include <linux/version.h>
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 13, 0) && (defined(RHEL_MAJOR) && defined(RHEL_MINOR) && RHEL_MAJOR == 7 && \
-    (RHEL_MINOR == 2 || RHEL_MINOR == 3)))
+#if 1
     #include <linux/timecounter.h>
 #endif
 
@@ -456,8 +455,8 @@ static const struct ptp_clock_info sx_ptp_clock_info = {
     .pps = 0,
     .adjfreq = sx_ptp_adjfreq,
     .adjtime = sx_ptp_adjtime,
-    .gettime = sx_ptp_gettime,
-    .settime = sx_ptp_settime,
+    .gettime64 = sx_ptp_gettime,
+    .settime64 = sx_ptp_settime,
     .enable = NULL,
 };
 static int sx_timestamp_init(struct sx_priv *priv)
@@ -466,8 +465,7 @@ static int sx_timestamp_init(struct sx_priv *priv)
     struct sx_dev    *dev = &priv->dev;
     u64               ns;
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 13, 0) && (defined(RHEL_MAJOR) && defined(RHEL_MINOR) && RHEL_MAJOR == 7 && \
-    (RHEL_MINOR == 2 || RHEL_MINOR == 3)))
+#if 1
     u64 frac = 0;
 #endif
 
@@ -501,8 +499,7 @@ static int sx_timestamp_init(struct sx_priv *priv)
      * sure counter is checked at least once every wrap around.
      */
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 13, 0) && (defined(RHEL_MAJOR) && defined(RHEL_MINOR) && RHEL_MAJOR == 7 && \
-    (RHEL_MINOR == 2 || RHEL_MINOR == 3)))
+#if 1
     ns = cyclecounter_cyc2ns(&tstamp->cycles, tstamp->cycles.mask, frac, &frac);
 #else
     ns = cyclecounter_cyc2ns(&tstamp->cycles, tstamp->cycles.mask);
